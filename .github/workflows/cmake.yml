name: CI

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.platform.name }} ${{ matrix.config.name }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: Windows VS2019, os: windows-2019 }
        - { name: Windows VS2022, os: windows-2022 }
        - { name: Linux GCC,      os: ubuntu-latest }
        - { name: Linux Clang,    os: ubuntu-latest, flags: -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++, gcovr_options: '--gcov-executable="llvm-cov-$CLANG_VERSION gcov"' }
        - { name: MacOS XCode,    os: macos-latest }
        config:
        - { name: Shared, flags: -DBUILD_SHARED_LIBS=TRUE }
        - { name: Static, flags: -DBUILD_SHARED_LIBS=FALSE }

        include:
        - platform: { name: Windows VS2022, os: windows-2022 }
          config: { name: Unity, flags: -DBUILD_SHARED_LIBS=TRUE -DCMAKE_UNITY_BUILD=ON }
        - platform: { name: Windows VS2019, os: windows-2019 }
          config: { name: Unity, flags: -DBUILD_SHARED_LIBS=TRUE -DCMAKE_UNITY_BUILD=ON }
        #- platform: { name: MacOS XCode, os: macos-latest }
        #  config: { name: Frameworks, flags: -DSFML_BUILD_FRAMEWORKS=TRUE }
        #- platform: { name: MacOS XCode, os: macos-latest }
        #  config: { name: iOS, flags: -DCMAKE_TOOLCHAIN_FILE=$GITHUB_WORKSPACE/cmake/toolchains/iOS.toolchain.cmake -DIOS_PLATFORM=SIMULATOR }
        #- platform: { name: Android, os: ubuntu-latest }
        #  config: { name: x86, flags: -DCMAKE_ANDROID_ARCH_ABI=x86 -DCMAKE_SYSTEM_NAME=Android -DSFML_BUILD_TEST_SUITE=FALSE -DCMAKE_ANDROID_NDK=$GITHUB_WORKSPACE/android-ndk-r18b -DCMAKE_ANDROID_NDK_TOOLCHAIN_VERSION=clang -DCMAKE_ANDROID_STL_TYPE=c++_shared -DCMAKE_ANDROID_API=26 }
        - platform: { name: Android, os: ubuntu-latest }
          config: { name: armeabi-v7a, flags: -DCMAKE_ANDROID_ARCH_ABI=armeabi-v7a -DCMAKE_SYSTEM_NAME=Android -DSFML_BUILD_TEST_SUITE=FALSE -DCMAKE_ANDROID_NDK=$GITHUB_WORKSPACE/android-ndk-r18b -DCMAKE_ANDROID_NDK_TOOLCHAIN_VERSION=clang -DCMAKE_ANDROID_STL_TYPE=c++_shared -DCMAKE_ANDROID_API=26 -DCMAKE_TOOLCHAIN_FILE=$GITHUB_WORKSPACE/android-ndk-r18b/build/cmake/android.toolchain.cmake -DSFML_DIR=$GITHUB_WORKSPACE/android-ndk-r18b/sources/third_party/sfml/lib/armeabi-v7a/cmake/SFML -DBUILD_SHARED_LIBS=TRUE }
        #- platform: { name: Linux GCC, os: ubuntu-latest  }
        #  config: { name: Static DRM, flags: -DBUILD_SHARED_LIBS=FALSE -DSFML_USE_DRM=TRUE }
        - platform: { name: Linux GCC, os: ubuntu-latest  }
          config: { name: Shared DRM, flags: -DBUILD_SHARED_LIBS=TRUE -DSFML_USE_DRM=TRUE }

    steps:
    - name: Install Linux Dependencies
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install libxrandr-dev libxcursor-dev libudev-dev libopenal-dev libflac-dev libvorbis-dev libgl1-mesa-dev libegl1-mesa-dev libdrm-dev libgbm-dev

    - name: SFML_project - Checkout Code
      uses: actions/checkout@v3

    - name: SFML - Checkout Code
      uses: actions/checkout@v3
      with:
        repository: SFML/SFML
        path: SFML
        ref: 2.6.x
    
    - name: Install Android Components
      if: matrix.platform.name == 'Android'
      run: |
        echo "y" | /usr/local/lib/android/sdk/tools/bin/sdkmanager --install "cmake;3.10.2.4988404" --sdk_root=ANDROID_SDK_ROOT
        sudo ln -sf /usr/local/lib/android/sdk/cmake/3.10.2.4988404/bin/cmake /usr/bin/cmake
        wget -nv https://dl.google.com/android/repository/android-ndk-r18b-linux-x86_64.zip -P $GITHUB_WORKSPACE
        unzip -qq -d $GITHUB_WORKSPACE android-ndk-r18b-linux-x86_64.zip

    - name: SFML - Configure CMake
      shell: bash
      run: cmake -S $GITHUB_WORKSPACE/SFML -B $GITHUB_WORKSPACE/SFML/build -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/SFML/install -DCMAKE_VERBOSE_MAKEFILE=ON ${{matrix.platform.flags}} ${{matrix.config.flags}}

    - name: SFML - Build
      shell: bash
      run: cmake --build $GITHUB_WORKSPACE/SFML/build --config Release --target install

    - name: SFML_project - Configure CMake
      shell: bash
      run: cmake -S $GITHUB_WORKSPACE -B $GITHUB_WORKSPACE/build -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/install -DCMAKE_VERBOSE_MAKEFILE=ON -DSFML_DIR=$GITHUB_WORKSPACE/SFML/install/lib/cmake/SFML ${{matrix.platform.flags}}

    - name: SFML_project - Build
      shell: bash
      run: cmake --build $GITHUB_WORKSPACE/build --config Release --target install
    
    - name: Upload a build artefact
      uses: actions/upload-artifact@v3
      with:
        name: ${{matrix.platform.name}} ${{matrix.config.name}}
        path: bin/
        retention-days: 90        
